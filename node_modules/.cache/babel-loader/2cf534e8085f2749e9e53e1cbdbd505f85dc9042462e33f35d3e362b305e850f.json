{"ast":null,"code":"export default {\n  data() {\n    return {\n      name: '',\n      phoneNumber: '',\n      postcode: '',\n      address: '',\n      extraAddress: ''\n    };\n  },\n  methods: {\n    submitForm() {\n      if (this.validateName(this.name) && this.validatePhoneNumber(this.phoneNumber)) {\n        // 이름과 핸드폰 번호가 유효한 경우에만 처리\n        console.log('폼이 제출되었습니다!');\n        // 다음 단계로 라우팅\n        // this.$router.push('/nextStep');\n      } else {\n        console.log('유효하지 않은 입력입니다.');\n      }\n    },\n    validateName(name) {\n      const nameRegex = /^[가-힣]{2,}|[a-zA-Z]{3,}$/; // 한글 2글자 이상 또는 영문 3글자 이상\n      return nameRegex.test(name);\n    },\n    validatePhoneNumber(phoneNumber) {\n      const phoneRegex = /^0\\d{2,3}-?\\d{3,4}-?\\d{4}$/; // 0으로 시작하고 하이픈 또는 공백 허용한 형식\n      return phoneRegex.test(phoneNumber);\n    }\n  }\n};","map":{"version":3,"names":["data","name","phoneNumber","postcode","address","extraAddress","methods","submitForm","validateName","validatePhoneNumber","console","log","nameRegex","test","phoneRegex"],"sources":["/Users/kakao/Documents/balaan/src/components/secondStep.vue"],"sourcesContent":["<template>\n    <div>\n      <form @submit.prevent=\"submitForm\">\n        <div>\n          <label for=\"name\">이름</label>\n          <input type=\"text\" id=\"name\" v-model=\"name\" required>\n        </div>\n        <div>\n          <label for=\"phoneNumber\">연락처</label>\n          <input type=\"text\" id=\"phoneNumber\" v-model=\"phoneNumber\" required>\n        </div>\n        <div>\n            <input type=\"text\" v-model=\"postcode\" readonly>\n            <input type=\"text\" v-model=\"address\" readonly>\n            <input type=\"text\" v-model=\"extraAddress\" readonly>\n            <button @click=\"execDaumPostcode\">주소검색</button>\n        </div>\n        <div>\n          <button type=\"submit\">다음</button>\n        </div>\n      </form>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    data() {\n      return {\n        name: '',\n        phoneNumber: '',\n        postcode: '',\n      address: '',\n      extraAddress: ''\n      };\n    },\n    methods: {\n      submitForm() {\n        if (this.validateName(this.name) && this.validatePhoneNumber(this.phoneNumber)) {\n          // 이름과 핸드폰 번호가 유효한 경우에만 처리\n          console.log('폼이 제출되었습니다!');\n          // 다음 단계로 라우팅\n          // this.$router.push('/nextStep');\n        } else {\n          console.log('유효하지 않은 입력입니다.');\n        }\n      },\n      validateName(name) {\n        const nameRegex = /^[가-힣]{2,}|[a-zA-Z]{3,}$/; // 한글 2글자 이상 또는 영문 3글자 이상\n        return nameRegex.test(name);\n      },\n      validatePhoneNumber(phoneNumber) {\n        const phoneRegex = /^0\\d{2,3}-?\\d{3,4}-?\\d{4}$/; // 0으로 시작하고 하이픈 또는 공백 허용한 형식\n        return phoneRegex.test(phoneNumber);\n      },\n    }\n  };\n  </script>"],"mappings":"AAyBE,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,EAAE;MACRC,WAAW,EAAE,EAAE;MACfC,QAAQ,EAAE,EAAE;MACdC,OAAO,EAAE,EAAE;MACXC,YAAY,EAAE;IACd,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACX,IAAI,IAAI,CAACC,YAAY,CAAC,IAAI,CAACP,IAAI,KAAK,IAAI,CAACQ,mBAAmB,CAAC,IAAI,CAACP,WAAW,CAAC,EAAE;QAC9E;QACAQ,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;QAC1B;QACA;MACF,OAAO;QACLD,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;MAC/B;IACF,CAAC;IACDH,YAAYA,CAACP,IAAI,EAAE;MACjB,MAAMW,SAAQ,GAAI,0BAA0B,EAAE;MAC9C,OAAOA,SAAS,CAACC,IAAI,CAACZ,IAAI,CAAC;IAC7B,CAAC;IACDQ,mBAAmBA,CAACP,WAAW,EAAE;MAC/B,MAAMY,UAAS,GAAI,4BAA4B,EAAE;MACjD,OAAOA,UAAU,CAACD,IAAI,CAACX,WAAW,CAAC;IACrC;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}