{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"name\"\n}, \"이름\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"p\", null, \"2글자 이상의 한글 완성형, 또는 3글자 이상의 영문 알파벳이고 그 외 특수문자, 숫자, 공백은 허용하지 않습니다.\", -1 /* HOISTED */);\nconst _hoisted_4 = [_hoisted_3];\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"phoneNumber\"\n}, \"연락처\", -1 /* HOISTED */);\nconst _hoisted_6 = {\n  key: 0\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"p\", null, \"0으로 시작하며 중간 3-4자리, 마지막 4자리의 형식이며 하이픈 또는 공백 허용합니다.\", -1 /* HOISTED */);\nconst _hoisted_8 = [_hoisted_7];\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"phoneNumber\"\n}, \"주소\", -1 /* HOISTED */);\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_11 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"form\", {\n    onSubmit: _cache[6] || (_cache[6] = _withModifiers((...args) => $options.submitForm && $options.submitForm(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_hoisted_1, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.name = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.name]]), !$options.isValidateName && $data.name ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [..._hoisted_4])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", null, [_hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"phoneNumber\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.phoneNumber = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.phoneNumber]]), !$options.isValidatePhoneNumber && $data.phoneNumber ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [..._hoisted_8])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", null, [_hoisted_9, _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.daumPostcode && $options.daumPostcode(...args))\n  }, \"주소검색\"), _createTextVNode(), _hoisted_10, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.address = $event),\n    readonly: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.address]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.extraAddress = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.extraAddress]])]), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.goBack && $options.goBack(...args))\n  }, \"이전\"), _createElementVNode(\"button\", {\n    disabled: !$options.isFormValid,\n    type: \"submit\"\n  }, \"다음\", 8 /* PROPS */, _hoisted_11)])], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["_createElementVNode","for","_hoisted_3","_hoisted_7","_createElementBlock","onSubmit","_cache","_withModifiers","args","$options","submitForm","_hoisted_1","type","id","$data","name","$event","required","isValidateName","_hoisted_2","_hoisted_4","_hoisted_5","phoneNumber","isValidatePhoneNumber","_hoisted_6","_hoisted_8","_hoisted_9","onClick","daumPostcode","_hoisted_10","address","readonly","extraAddress","goBack","disabled","isFormValid","_hoisted_11"],"sources":["/Users/kakao/Documents/balaan/src/components/secondStep.vue"],"sourcesContent":["<template>\n    <div>\n      <form @submit.prevent=\"submitForm\">\n        <div>\n          <label for=\"name\">이름</label>\n          <input type=\"text\" id=\"name\" v-model=\"name\" required>\n          <div v-if=\"!isValidateName && name\">\n           <p>2글자 이상의 한글 완성형, 또는 3글자 이상의 영문 알파벳이고 그 외 특수문자, 숫자, 공백은 허용하지 않습니다.</p>\n          </div>\n        </div>\n        <div>\n          <label for=\"phoneNumber\">연락처</label>\n          <input type=\"text\" id=\"phoneNumber\" v-model=\"phoneNumber\" required>\n          <div v-if=\"!isValidatePhoneNumber && phoneNumber\">\n           <p>0으로 시작하며 중간 3-4자리, 마지막 4자리의 형식이며 하이픈 또는 공백 허용합니다.</p>\n          </div>\n        </div>\n        <div>\n            <label for=\"phoneNumber\">주소</label>\n            <button @click=\"daumPostcode\">주소검색</button> <br>\n            <input type=\"text\" v-model=\"address\" readonly>\n            <input type=\"text\" v-model=\"extraAddress\">\n        </div>\n        <div>\n            <button @click=\"goBack\">이전</button>\n            <button :disabled=\"!isFormValid\" type=\"submit\">다음</button>\n        </div>\n      </form>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    data() {\n      return {\n        name: '',\n        phoneNumber: '',\n        address: '',\n        extraAddress: ''\n      };\n    },\n    created() {\n    // 페이지가 로드될 때 로컬 스토리지에서 name, phoneNumber, address 셋팅\n    this.name = localStorage.getItem('savedName') || '';\n    this.phoneNumber = localStorage.getItem('savedPhoneNumber') || '';\n    this.address = localStorage.getItem('savedAddress') || '';\n    this.extraAddress = localStorage.getItem('savedExtraAddress') || '';\n\n  },\n    computed: {\n     isFormValid() {\n      return (\n        this.name &&\n        this.phoneNumber &&\n        this.address &&\n        this.extraAddress &&\n        this.validatePhoneNumber(this.phoneNumber)\n      );\n    },\n      isValidateName() {\n        return this.validateName(this.name);\n    },\n      isValidatePhoneNumber() {\n        return this.validatePhoneNumber(this.phoneNumber);\n    }\n  },\n    methods: {\n      submitForm() {\n        if (this.validateName(this.name) && this.validatePhoneNumber(this.phoneNumber)&& this.address) {\n        localStorage.setItem('savedName', this.name);\n        localStorage.setItem('savedPhoneNumber', this.phoneNumber);\n        localStorage.setItem('savedAddress', this.address);\n        localStorage.setItem('savedExtraAddress', this.extraAddress);\n\n          // 이름과 핸드폰 번호가 유효한 경우에만 처리\n          console.log('폼이 제출되었습니다!');\n          // 다음 단계로 라우팅\n          this.$router.push('/finalStep');\n        } else {\n          console.log('유효하지 않은 입력입니다.');\n        }\n      },\n      validateName(name) {\n        const nameRegex = /^[가-힣]{2,}|[a-zA-Z]{3,}$/; // 한글 2글자 이상 또는 영문 3글자 이상\n        return nameRegex.test(name);\n      },\n      validatePhoneNumber(phoneNumber) {\n        const phoneRegex = /^0\\d{2,3}[ -]?\\d{3,4}[ -]?\\d{4}$/;\n        return phoneRegex.test(phoneNumber);\n      },\n      daumPostcode() {\n      new window.daum.Postcode({\n        oncomplete: (data) => {\n          if (this.extraAddress !== '') {\n            this.extraAddress = '';\n          }\n          if (data.userSelectedType === 'R') {\n            // 도로명 주소를 선택했을 경우\n            this.address = data.roadAddress;\n          } else {\n            // 지번 주소를 선택했을 경우\n            this.address = data.jibunAddress;\n          }\n          if (data.userSelectedType === 'R') {\n            // 건물명이 있을 경우\n            if (data.buildingName !== '' && data.apartment === 'Y') {\n              this.extraAddress +=\n                this.extraAddress !== ''\n                  ? `, ${data.buildingName}`\n                  : data.buildingName;\n            }\n            // 표시할 참고항목이 있을 경우\n            if (this.extraAddress !== '') {\n              this.extraAddress = `(${this.extraAddress})`;\n            }\n          } else {\n            this.extraAddress = '';\n          }\n        }\n      }).open();\n    },\n    goBack() {\n      // 브라우저의 이전 페이지로 이동\n      window.history.back();\n    }\n    }\n  };\n  </script>"],"mappings":";gCAIUA,mBAAA,CAA4B;EAArBC,GAAG,EAAC;AAAM,GAAC,IAAE;;;;gCAGnBD,mBAAA,CAAuE,WAApE,kEAAgE;oBAAnEE,UAAuE,C;gCAIxEF,mBAAA,CAAoC;EAA7BC,GAAG,EAAC;AAAa,GAAC,KAAG;;;;gCAG3BD,mBAAA,CAAwD,WAArD,mDAAiD;oBAApDG,UAAwD,C;gCAIvDH,mBAAA,CAAmC;EAA5BC,GAAG,EAAC;AAAa,GAAC,IAAE;iCACiBD,mBAAA,CAAI;;;uBAlBxDI,mBAAA,CA2BM,cA1BJJ,mBAAA,CAyBO;IAzBAK,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;MAC/BR,mBAAA,CAMM,cALJW,UAA4B,E,gBAC5BX,mBAAA,CAAqD;IAA9CY,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,MAAM;+DAAUC,KAAA,CAAAC,IAAI,GAAAC,MAAA;IAAEC,QAAQ,EAAR;iDAANH,KAAA,CAAAC,IAAI,E,IAC9BN,QAAA,CAAAS,cAAc,IAAIJ,KAAA,CAAAC,IAAI,I,cAAlCX,mBAAA,CAEM,OAAAe,UAAA,MAAAC,UAAA,M,qCAERpB,mBAAA,CAMM,cALJqB,UAAoC,E,gBACpCrB,mBAAA,CAAmE;IAA5DY,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,aAAa;+DAAUC,KAAA,CAAAQ,WAAW,GAAAN,MAAA;IAAEC,QAAQ,EAAR;iDAAbH,KAAA,CAAAQ,WAAW,E,IAC5Cb,QAAA,CAAAc,qBAAqB,IAAIT,KAAA,CAAAQ,WAAW,I,cAAhDlB,mBAAA,CAEM,OAAAoB,UAAA,MAAAC,UAAA,M,qCAERzB,mBAAA,CAKM,cAJF0B,UAAmC,EACnC1B,mBAAA,CAA2C;IAAlC2B,OAAK,EAAArB,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAmB,YAAA,IAAAnB,QAAA,CAAAmB,YAAA,IAAApB,IAAA,CAAY;KAAE,MAAI,G,oBAAUqB,WAAI,E,gBAChD7B,mBAAA,CAA8C;IAAvCY,IAAI,EAAC,MAAM;+DAAUE,KAAA,CAAAgB,OAAO,GAAAd,MAAA;IAAEe,QAAQ,EAAR;iDAATjB,KAAA,CAAAgB,OAAO,E,mBACnC9B,mBAAA,CAA0C;IAAnCY,IAAI,EAAC,MAAM;+DAAUE,KAAA,CAAAkB,YAAY,GAAAhB,MAAA;iDAAZF,KAAA,CAAAkB,YAAY,E,KAE5ChC,mBAAA,CAGM,cAFFA,mBAAA,CAAmC;IAA1B2B,OAAK,EAAArB,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAwB,MAAA,IAAAxB,QAAA,CAAAwB,MAAA,IAAAzB,IAAA,CAAM;KAAE,IAAE,GAC1BR,mBAAA,CAA0D;IAAjDkC,QAAQ,GAAGzB,QAAA,CAAA0B,WAAW;IAAEvB,IAAI,EAAC;KAAS,IAAE,iBAAAwB,WAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}