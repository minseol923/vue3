{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, computed, onMounted } from 'vue';\nexport default {\n  setup() {\n    const email = ref('');\n    const password = ref('');\n    const confirmPassword = ref('');\n    const router = useRouter();\n    onMounted(() => {\n      // 페이지가 로드될 때 로컬 스토리지에서 email과 password 셋팅\n      email.value = localStorage.getItem('savedEmail') || '';\n      password.value = localStorage.getItem('savedPassword') || '';\n      confirmPassword.value = localStorage.getItem('savedConfirmPassword') || '';\n    });\n    const isPasswordValid = computed(() => {\n      const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+])[A-Za-z\\d!@#$%^&*()_+]{8,}$/;\n      return passwordRegex.test(password.value);\n    });\n    const isFormValid = computed(() => {\n      return email.value && password.value && confirmPassword.value && password.value === confirmPassword.value && isPasswordValid.value;\n    });\n    const submitForm = () => {\n      if (isFormValid.value) {\n        console.log('폼이 제출되었습니다!');\n        // 로컬 스토리지에 email과 password 저장\n        localStorage.setItem('savedEmail', email.value);\n        localStorage.setItem('savedPassword', password.value);\n        localStorage.setItem('savedConfirmPassword', confirmPassword.value);\n        router.push('/secondStep');\n      } else if (password.value !== confirmPassword.value) {\n        alert('비밀번호와 비밀번호 확인이 일치하지 않습니다.');\n      }\n    };\n    return {\n      email,\n      password,\n      confirmPassword,\n      isPasswordValid,\n      isFormValid,\n      submitForm\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","setup","email","password","confirmPassword","router","useRouter","value","localStorage","getItem","isPasswordValid","passwordRegex","test","isFormValid","submitForm","console","log","setItem","push","alert"],"sources":["/Users/kakao/Documents/balaan/src/components/firstStep.vue"],"sourcesContent":["<template>\n  <div>\n    <form @submit.prevent=\"submitForm\">\n      <div>\n        <label for=\"email\">이메일 </label>\n        <input type=\"email\" id=\"email\" v-model=\"email\" required>\n      </div>\n      <div>\n        <label for=\"password\">비밀번호 </label>\n        <input type=\"password\" id=\"password\" v-model=\"password\" required>\n        <div v-if=\"!isPasswordValid && password\">\n          <p>비밀번호는 영문 대문자, 소문자, 숫자, 특수문자를 포함한 8자리 이상의 문자열이어야 합니다.</p>\n        </div>\n      </div>\n      <div>\n        <label for=\"confirmPassword\">비밀번호 확인 </label>\n        <input type=\"password\" id=\"confirmPassword\" v-model=\"confirmPassword\" required>\n        <div v-if=\"password !== confirmPassword && confirmPassword\">\n          <p>비밀번호와 비밀번호 확인이 일치하지 않습니다.</p>\n        </div>\n      </div>\n      <div>\n        <button :disabled=\"!isFormValid\" type=\"submit\">다음</button>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted } from 'vue';\n\nexport default {\n  setup() {\n    const email = ref('');\n    const password = ref('');\n    const confirmPassword = ref('');\n    const router = useRouter();\n\n    onMounted(() => {\n      // 페이지가 로드될 때 로컬 스토리지에서 email과 password 셋팅\n      email.value = localStorage.getItem('savedEmail') || '';\n      password.value = localStorage.getItem('savedPassword') || '';\n      confirmPassword.value = localStorage.getItem('savedConfirmPassword') || '';\n    });\n\n    const isPasswordValid = computed(() => {\n      const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+])[A-Za-z\\d!@#$%^&*()_+]{8,}$/;\n      return passwordRegex.test(password.value);\n    });\n\n    const isFormValid = computed(() => {\n      return (\n        email.value &&\n        password.value &&\n        confirmPassword.value &&\n        password.value === confirmPassword.value &&\n        isPasswordValid.value\n      );\n    });\n\n    const submitForm = () => {\n      if (isFormValid.value) {\n        console.log('폼이 제출되었습니다!');\n        // 로컬 스토리지에 email과 password 저장\n        localStorage.setItem('savedEmail', email.value);\n        localStorage.setItem('savedPassword', password.value);\n        localStorage.setItem('savedConfirmPassword', confirmPassword.value);\n        router.push('/secondStep');\n      } else if (password.value !== confirmPassword.value) {\n        alert('비밀번호와 비밀번호 확인이 일치하지 않습니다.');\n      }\n    };\n\n    return {\n      email,\n      password,\n      confirmPassword,\n      isPasswordValid,\n      isFormValid,\n      submitForm,\n    };\n  },\n};\n</script>\n"],"mappings":";AA6BA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAQ,QAAS,KAAK;AAE9C,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIJ,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMK,QAAO,GAAIL,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMM,eAAc,GAAIN,GAAG,CAAC,EAAE,CAAC;IAC/B,MAAMO,MAAK,GAAIC,SAAS,CAAC,CAAC;IAE1BN,SAAS,CAAC,MAAM;MACd;MACAE,KAAK,CAACK,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,YAAY,KAAK,EAAE;MACtDN,QAAQ,CAACI,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,eAAe,KAAK,EAAE;MAC5DL,eAAe,CAACG,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,sBAAsB,KAAK,EAAE;IAC5E,CAAC,CAAC;IAEF,MAAMC,eAAc,GAAIX,QAAQ,CAAC,MAAM;MACrC,MAAMY,aAAY,GAAI,gFAAgF;MACtG,OAAOA,aAAa,CAACC,IAAI,CAACT,QAAQ,CAACI,KAAK,CAAC;IAC3C,CAAC,CAAC;IAEF,MAAMM,WAAU,GAAId,QAAQ,CAAC,MAAM;MACjC,OACEG,KAAK,CAACK,KAAI,IACVJ,QAAQ,CAACI,KAAI,IACbH,eAAe,CAACG,KAAI,IACpBJ,QAAQ,CAACI,KAAI,KAAMH,eAAe,CAACG,KAAI,IACvCG,eAAe,CAACH,KAAI;IAExB,CAAC,CAAC;IAEF,MAAMO,UAAS,GAAIA,CAAA,KAAM;MACvB,IAAID,WAAW,CAACN,KAAK,EAAE;QACrBQ,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;QAC1B;QACAR,YAAY,CAACS,OAAO,CAAC,YAAY,EAAEf,KAAK,CAACK,KAAK,CAAC;QAC/CC,YAAY,CAACS,OAAO,CAAC,eAAe,EAAEd,QAAQ,CAACI,KAAK,CAAC;QACrDC,YAAY,CAACS,OAAO,CAAC,sBAAsB,EAAEb,eAAe,CAACG,KAAK,CAAC;QACnEF,MAAM,CAACa,IAAI,CAAC,aAAa,CAAC;MAC5B,OAAO,IAAIf,QAAQ,CAACI,KAAI,KAAMH,eAAe,CAACG,KAAK,EAAE;QACnDY,KAAK,CAAC,2BAA2B,CAAC;MACpC;IACF,CAAC;IAED,OAAO;MACLjB,KAAK;MACLC,QAAQ;MACRC,eAAe;MACfM,eAAe;MACfG,WAAW;MACXC;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}