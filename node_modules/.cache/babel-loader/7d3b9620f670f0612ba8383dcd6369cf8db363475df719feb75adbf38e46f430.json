{"ast":null,"code":"export default {\n  beforeRouteLeave(to, from, next) {\n    // 여기에서는 로컬 스토리지를 비우지 않고 새로운 정보를 추가합니다.\n    const userData = JSON.parse(localStorage.getItem('userData')) || {};\n\n    // 현재 페이지의 정보를 새로운 객체로 만들어 기존 정보와 병합합니다.\n    const newUserData = {\n      savedName: this.savedName,\n      savedEmail: this.savedEmail,\n      savedAddress: this.savedAddress,\n      savedPhoneNumber: this.savedPhoneNumber\n    };\n\n    // 기존 정보와 새로운 정보를 합친 후 다시 로컬 스토리지에 저장합니다.\n    localStorage.setItem('userData', JSON.stringify({\n      ...userData,\n      ...newUserData\n    }));\n    next();\n  },\n  data() {\n    return {\n      savedName: '',\n      savedEmail: '',\n      savedAddress: '',\n      savedPhoneNumber: ''\n    };\n  },\n  created() {\n    // 로컬 스토리지에서 정보를 가져와 데이터에 할당\n    const userData = JSON.parse(localStorage.getItem('userData')) || {};\n    this.savedName = userData.savedName || '';\n    this.savedEmail = userData.savedEmail || '';\n    this.savedAddress = userData.savedAddress || '';\n    this.savedPhoneNumber = userData.savedPhoneNumber || '';\n  }\n};","map":{"version":3,"names":["beforeRouteLeave","to","from","next","userData","JSON","parse","localStorage","getItem","newUserData","savedName","savedEmail","savedAddress","savedPhoneNumber","setItem","stringify","data","created"],"sources":["/Users/kakao/Documents/balaan/src/components/infoPage.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>회원가입 완료</h1>\n    <div>\n      <p>\"{{ savedName }}\"님, 회원가입이 완료 되었습니다.</p>\n      <p>이메일: {{ savedEmail }}</p>\n      <p>주소: {{ savedAddress }}</p>\n      <p>전화번호: {{ savedPhoneNumber }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  beforeRouteLeave(to, from, next) {\n    // 여기에서는 로컬 스토리지를 비우지 않고 새로운 정보를 추가합니다.\n    const userData = JSON.parse(localStorage.getItem('userData')) || {};\n\n    // 현재 페이지의 정보를 새로운 객체로 만들어 기존 정보와 병합합니다.\n    const newUserData = {\n      savedName: this.savedName,\n      savedEmail: this.savedEmail,\n      savedAddress: this.savedAddress,\n      savedPhoneNumber: this.savedPhoneNumber\n    };\n\n    // 기존 정보와 새로운 정보를 합친 후 다시 로컬 스토리지에 저장합니다.\n    localStorage.setItem('userData', JSON.stringify({ ...userData, ...newUserData }));\n\n    next();\n  },\n  data() {\n    return {\n      savedName: '',\n      savedEmail: '',\n      savedAddress: '',\n      savedPhoneNumber: '',\n    };\n  },\n  created() {\n    // 로컬 스토리지에서 정보를 가져와 데이터에 할당\n    const userData = JSON.parse(localStorage.getItem('userData')) || {};\n    this.savedName = userData.savedName || '';\n    this.savedEmail = userData.savedEmail || '';\n    this.savedAddress = userData.savedAddress || '';\n    this.savedPhoneNumber = userData.savedPhoneNumber || '';\n  },\n};\n</script>\n"],"mappings":"AAaA,eAAe;EACbA,gBAAgBA,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,EAAE;IAC/B;IACA,MAAMC,QAAO,GAAIC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;;IAEnE;IACA,MAAMC,WAAU,GAAI;MAClBC,SAAS,EAAE,IAAI,CAACA,SAAS;MACzBC,UAAU,EAAE,IAAI,CAACA,UAAU;MAC3BC,YAAY,EAAE,IAAI,CAACA,YAAY;MAC/BC,gBAAgB,EAAE,IAAI,CAACA;IACzB,CAAC;;IAED;IACAN,YAAY,CAACO,OAAO,CAAC,UAAU,EAAET,IAAI,CAACU,SAAS,CAAC;MAAE,GAAGX,QAAQ;MAAE,GAAGK;IAAY,CAAC,CAAC,CAAC;IAEjFN,IAAI,CAAC,CAAC;EACR,CAAC;EACDa,IAAIA,CAAA,EAAG;IACL,OAAO;MACLN,SAAS,EAAE,EAAE;MACbC,UAAU,EAAE,EAAE;MACdC,YAAY,EAAE,EAAE;MAChBC,gBAAgB,EAAE;IACpB,CAAC;EACH,CAAC;EACDI,OAAOA,CAAA,EAAG;IACR;IACA,MAAMb,QAAO,GAAIC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IACnE,IAAI,CAACE,SAAQ,GAAIN,QAAQ,CAACM,SAAQ,IAAK,EAAE;IACzC,IAAI,CAACC,UAAS,GAAIP,QAAQ,CAACO,UAAS,IAAK,EAAE;IAC3C,IAAI,CAACC,YAAW,GAAIR,QAAQ,CAACQ,YAAW,IAAK,EAAE;IAC/C,IAAI,CAACC,gBAAe,GAAIT,QAAQ,CAACS,gBAAe,IAAK,EAAE;EACzD;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}