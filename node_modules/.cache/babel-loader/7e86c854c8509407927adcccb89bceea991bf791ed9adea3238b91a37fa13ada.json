{"ast":null,"code":"import { ref, computed, onMounted } from 'vue';\nexport default {\n  setup() {\n    const name = ref('');\n    const phoneNumber = ref('');\n    const address = ref('');\n    const extraAddress = ref('');\n    onMounted(() => {\n      // 페이지가 로드될 때 로컬 스토리지에서 name, phoneNumber, address 셋팅\n      name.value = localStorage.getItem('savedName') || '';\n      phoneNumber.value = localStorage.getItem('savedPhoneNumber') || '';\n      address.value = localStorage.getItem('savedAddress') || '';\n      extraAddress.value = localStorage.getItem('savedExtraAddress') || '';\n    });\n    const isValidateName = computed(() => {\n      const nameRegex = /^[가-힣]{2,}|[a-zA-Z]{3,}$/;\n      return nameRegex.test(name.value);\n    });\n    const isValidatePhoneNumber = computed(() => {\n      const phoneRegex = /^0\\d{2,3}[ -]?\\d{3,4}[ -]?\\d{4}$/;\n      return phoneRegex.test(phoneNumber.value);\n    });\n    const isFormValid = computed(() => {\n      return name.value && phoneNumber.value && address.value && extraAddress.value && isValidatePhoneNumber.value;\n    });\n    const submitForm = () => {\n      if (isValidateName.value && isValidatePhoneNumber.value && address.value) {\n        localStorage.setItem('savedName', name.value);\n        localStorage.setItem('savedPhoneNumber', phoneNumber.value);\n        localStorage.setItem('savedAddress', address.value);\n        localStorage.setItem('savedExtraAddress', extraAddress.value);\n        console.log('폼이 제출되었습니다!');\n        // 다음 단계로 라우팅\n        // this.$router.push('/finalStep');\n      } else {\n        console.log('유효하지 않은 입력입니다.');\n      }\n    };\n    const daumPostcode = () => {\n      // 코드 추가\n    };\n    const goBack = () => {\n      // 코드 추가\n    };\n    return {\n      name,\n      phoneNumber,\n      address,\n      extraAddress,\n      isValidateName,\n      isValidatePhoneNumber,\n      isFormValid,\n      submitForm,\n      daumPostcode,\n      goBack\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","setup","name","phoneNumber","address","extraAddress","value","localStorage","getItem","isValidateName","nameRegex","test","isValidatePhoneNumber","phoneRegex","isFormValid","submitForm","setItem","console","log","daumPostcode","goBack"],"sources":["/Users/kakao/Documents/balaan/src/components/secondStep.vue"],"sourcesContent":["<template>\n    <div>\n      <form @submit.prevent=\"submitForm\">\n        <div>\n          <label for=\"name\">이름</label>\n          <input type=\"text\" id=\"name\" v-model=\"name\" required>\n          <div v-if=\"!isValidateName && name\">\n            <p>2글자 이상의 한글 완성형, 또는 3글자 이상의 영문 알파벳이고 그 외 특수문자, 숫자, 공백은 허용하지 않습니다.</p>\n          </div>\n        </div>\n        <div>\n          <label for=\"phoneNumber\">연락처</label>\n          <input type=\"text\" id=\"phoneNumber\" v-model=\"phoneNumber\" required>\n          <div v-if=\"!isValidatePhoneNumber && phoneNumber\">\n            <p>0으로 시작하며 중간 3-4자리, 마지막 4자리의 형식이며 하이픈 또는 공백 허용합니다.</p>\n          </div>\n        </div>\n        <div>\n          <label for=\"phoneNumber\">주소</label>\n          <button @click=\"daumPostcode\">주소검색</button> <br>\n          <input type=\"text\" v-model=\"address\" readonly>\n          <input type=\"text\" v-model=\"extraAddress\">\n        </div>\n        <div>\n          <button @click=\"goBack\">이전</button>\n          <button :disabled=\"!isFormValid\" type=\"submit\">다음</button>\n        </div>\n      </form>\n    </div>\n  </template>\n  \n  <script>\n  import { ref, computed, onMounted } from 'vue';\n  \n  export default {\n    setup() {\n      const name = ref('');\n      const phoneNumber = ref('');\n      const address = ref('');\n      const extraAddress = ref('');\n  \n      onMounted(() => {\n        // 페이지가 로드될 때 로컬 스토리지에서 name, phoneNumber, address 셋팅\n        name.value = localStorage.getItem('savedName') || '';\n        phoneNumber.value = localStorage.getItem('savedPhoneNumber') || '';\n        address.value = localStorage.getItem('savedAddress') || '';\n        extraAddress.value = localStorage.getItem('savedExtraAddress') || '';\n      });\n  \n      const isValidateName = computed(() => {\n        const nameRegex = /^[가-힣]{2,}|[a-zA-Z]{3,}$/;\n        return nameRegex.test(name.value);\n      });\n  \n      const isValidatePhoneNumber = computed(() => {\n        const phoneRegex = /^0\\d{2,3}[ -]?\\d{3,4}[ -]?\\d{4}$/;\n        return phoneRegex.test(phoneNumber.value);\n      });\n  \n      const isFormValid = computed(() => {\n        return (\n          name.value &&\n          phoneNumber.value &&\n          address.value &&\n          extraAddress.value &&\n          isValidatePhoneNumber.value\n        );\n      });\n  \n      const submitForm = () => {\n        if (isValidateName.value && isValidatePhoneNumber.value && address.value) {\n          localStorage.setItem('savedName', name.value);\n          localStorage.setItem('savedPhoneNumber', phoneNumber.value);\n          localStorage.setItem('savedAddress', address.value);\n          localStorage.setItem('savedExtraAddress', extraAddress.value);\n  \n          console.log('폼이 제출되었습니다!');\n          // 다음 단계로 라우팅\n          // this.$router.push('/finalStep');\n        } else {\n          console.log('유효하지 않은 입력입니다.');\n        }\n      };\n  \n      const daumPostcode = () => {\n        // 코드 추가\n      };\n  \n      const goBack = () => {\n        // 코드 추가\n      };\n  \n      return {\n        name,\n        phoneNumber,\n        address,\n        extraAddress,\n        isValidateName,\n        isValidatePhoneNumber,\n        isFormValid,\n        submitForm,\n        daumPostcode,\n        goBack,\n      };\n    },\n  };\n  </script>\n  "],"mappings":"AAgCE,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAQ,QAAS,KAAK;AAE9C,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,IAAG,GAAIJ,GAAG,CAAC,EAAE,CAAC;IACpB,MAAMK,WAAU,GAAIL,GAAG,CAAC,EAAE,CAAC;IAC3B,MAAMM,OAAM,GAAIN,GAAG,CAAC,EAAE,CAAC;IACvB,MAAMO,YAAW,GAAIP,GAAG,CAAC,EAAE,CAAC;IAE5BE,SAAS,CAAC,MAAM;MACd;MACAE,IAAI,CAACI,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,KAAK,EAAE;MACpDL,WAAW,CAACG,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,kBAAkB,KAAK,EAAE;MAClEJ,OAAO,CAACE,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,cAAc,KAAK,EAAE;MAC1DH,YAAY,CAACC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,mBAAmB,KAAK,EAAE;IACtE,CAAC,CAAC;IAEF,MAAMC,cAAa,GAAIV,QAAQ,CAAC,MAAM;MACpC,MAAMW,SAAQ,GAAI,0BAA0B;MAC5C,OAAOA,SAAS,CAACC,IAAI,CAACT,IAAI,CAACI,KAAK,CAAC;IACnC,CAAC,CAAC;IAEF,MAAMM,qBAAoB,GAAIb,QAAQ,CAAC,MAAM;MAC3C,MAAMc,UAAS,GAAI,kCAAkC;MACrD,OAAOA,UAAU,CAACF,IAAI,CAACR,WAAW,CAACG,KAAK,CAAC;IAC3C,CAAC,CAAC;IAEF,MAAMQ,WAAU,GAAIf,QAAQ,CAAC,MAAM;MACjC,OACEG,IAAI,CAACI,KAAI,IACTH,WAAW,CAACG,KAAI,IAChBF,OAAO,CAACE,KAAI,IACZD,YAAY,CAACC,KAAI,IACjBM,qBAAqB,CAACN,KAAI;IAE9B,CAAC,CAAC;IAEF,MAAMS,UAAS,GAAIA,CAAA,KAAM;MACvB,IAAIN,cAAc,CAACH,KAAI,IAAKM,qBAAqB,CAACN,KAAI,IAAKF,OAAO,CAACE,KAAK,EAAE;QACxEC,YAAY,CAACS,OAAO,CAAC,WAAW,EAAEd,IAAI,CAACI,KAAK,CAAC;QAC7CC,YAAY,CAACS,OAAO,CAAC,kBAAkB,EAAEb,WAAW,CAACG,KAAK,CAAC;QAC3DC,YAAY,CAACS,OAAO,CAAC,cAAc,EAAEZ,OAAO,CAACE,KAAK,CAAC;QACnDC,YAAY,CAACS,OAAO,CAAC,mBAAmB,EAAEX,YAAY,CAACC,KAAK,CAAC;QAE7DW,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;QAC1B;QACA;MACF,OAAO;QACLD,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;MAC/B;IACF,CAAC;IAED,MAAMC,YAAW,GAAIA,CAAA,KAAM;MACzB;IAAA,CACD;IAED,MAAMC,MAAK,GAAIA,CAAA,KAAM;MACnB;IAAA,CACD;IAED,OAAO;MACLlB,IAAI;MACJC,WAAW;MACXC,OAAO;MACPC,YAAY;MACZI,cAAc;MACdG,qBAAqB;MACrBE,WAAW;MACXC,UAAU;MACVI,YAAY;MACZC;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}