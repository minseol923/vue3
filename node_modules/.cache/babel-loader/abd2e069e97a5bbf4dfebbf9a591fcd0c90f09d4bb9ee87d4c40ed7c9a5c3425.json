{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  },\n  computed: {\n    isFormValid() {\n      return this.email && this.password && this.confirmPassword && this.password === this.confirmPassword && this.isPassword(this.password);\n    }\n  },\n  methods: {\n    submitForm() {\n      if (this.isFormValid) {\n        console.log('폼이 제출되었습니다!');\n        this.$router.push('/secondStep');\n      } else {\n        alert('비밀번호 에는 영문 대문자, 소문자, 숫자, 특수문자를 포함한 8자리 이상의 문자열이 포함 되어야 합니다.');\n      }\n    },\n    //비밀번호 유효성 검사\n    isPassword(password) {\n      const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+])[A-Za-z\\d!@#$%^&*()_+]{8,}$/;\n      return passwordRegex.test(password);\n    }\n  }\n};","map":{"version":3,"names":["data","email","password","confirmPassword","computed","isFormValid","isPassword","methods","submitForm","console","log","$router","push","alert","passwordRegex","test"],"sources":["/Users/kakao/Documents/balaan/src/components/firstStep.vue"],"sourcesContent":["<template>\n  <div>\n    <form @submit.prevent=\"submitForm\">\n      <div>\n        <label for=\"email\">이메일 </label>\n        <input type=\"email\" id=\"email\" v-model=\"email\" required>\n      </div>\n      <div>\n        <label for=\"password\">비밀번호 </label>\n        <input type=\"password\" id=\"password\" v-model=\"password\" required>\n      </div>\n      <div>\n        <label for=\"confirmPassword\">비밀번호 확인 </label>\n        <input type=\"password\" id=\"confirmPassword\" v-model=\"confirmPassword\" required>\n      </div>\n      <div>\n        <button type=\"submit\">다음</button>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  },\n  computed: {\n    isFormValid() {\n      return (\n        this.email &&\n        this.password &&\n        this.confirmPassword &&\n        this.password === this.confirmPassword &&\n        this.isPassword(this.password)\n      );\n    }\n  },\n  methods: {\n    submitForm() {\n      if (this.isFormValid) {\n        console.log('폼이 제출되었습니다!');\n        this.$router.push('/secondStep'); \n      } else {\n        alert('비밀번호 에는 영문 대문자, 소문자, 숫자, 특수문자를 포함한 8자리 이상의 문자열이 포함 되어야 합니다.')\n      }\n    },\n    //비밀번호 유효성 검사\n    isPassword(password) {\n      const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+])[A-Za-z\\d!@#$%^&*()_+]{8,}$/;\n      return passwordRegex.test(password);\n    }\n  }\n};\n</script>\n"],"mappings":";AAuBA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE;IACnB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,WAAWA,CAAA,EAAG;MACZ,OACE,IAAI,CAACJ,KAAI,IACT,IAAI,CAACC,QAAO,IACZ,IAAI,CAACC,eAAc,IACnB,IAAI,CAACD,QAAO,KAAM,IAAI,CAACC,eAAc,IACrC,IAAI,CAACG,UAAU,CAAC,IAAI,CAACJ,QAAQ;IAEjC;EACF,CAAC;EACDK,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACX,IAAI,IAAI,CAACH,WAAW,EAAE;QACpBI,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;QAC1B,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,aAAa,CAAC;MAClC,OAAO;QACLC,KAAK,CAAC,6DAA6D;MACrE;IACF,CAAC;IACD;IACAP,UAAUA,CAACJ,QAAQ,EAAE;MACnB,MAAMY,aAAY,GAAI,gFAAgF;MACtG,OAAOA,aAAa,CAACC,IAAI,CAACb,QAAQ,CAAC;IACrC;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}