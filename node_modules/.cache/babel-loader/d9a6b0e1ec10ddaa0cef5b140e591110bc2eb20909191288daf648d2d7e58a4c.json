{"ast":null,"code":"export default {\n  data() {\n    return {\n      cardNumber: ['', '', '', '']\n    };\n  },\n  computed: {\n    isValidCardNumber() {\n      const flattened = this.cardNumber.join(''); // 카드번호를 합쳐서 하나의 문자열로 만듦\n      if (flattened.length !== 16 || isNaN(flattened)) {\n        return false;\n      }\n      let sum = 0;\n      for (let i = 0; i < flattened.length; i++) {\n        let digit = parseInt(flattened[i], 10);\n\n        // 짝수 자릿수면서 9를 넘어가면 각 자릿수를 더함\n        if ((i + 1) % 2 === 0) {\n          digit *= 2;\n          if (digit > 9) {\n            digit = digit - 9;\n          }\n        }\n        sum += digit;\n      }\n\n      // 유효성 검사\n      return sum % 10 === 0;\n    }\n  },\n  methods: {\n    submitForm() {\n      if (!this.isValidCardNumber) {\n        alert(\"유효하지 않는 카드 번호 입니다.\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","cardNumber","computed","isValidCardNumber","flattened","join","length","isNaN","sum","i","digit","parseInt","methods","submitForm","alert"],"sources":["/Users/kakao/Documents/balaan/src/components/finalStep.vue"],"sourcesContent":["<template>\n    <div>\n      <form @submit.prevent=\"submitForm\">\n        <div>\n          <label for=\"cardNumber\">카드번호</label>\n          <input v-model=\"cardNumber[0]\" maxlength=\"4\" required>\n          <input v-model=\"cardNumber[1]\" maxlength=\"4\" required>\n          <input v-model=\"cardNumber[2]\" maxlength=\"4\" required>\n          <input v-model=\"cardNumber[3]\" maxlength=\"4\" required>\n        </div>\n        <div>\n          <button type=\"submit\">완료</button>\n        </div>\n      </form>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    data() {\n      return {\n        cardNumber: ['', '', '', '']\n      };\n    },\n    computed: {\n      isValidCardNumber() {\n        const flattened = this.cardNumber.join(''); // 카드번호를 합쳐서 하나의 문자열로 만듦\n        if (flattened.length !== 16 || isNaN(flattened)) {\n          return false;\n        }\n  \n        let sum = 0;\n        for (let i = 0; i < flattened.length; i++) {\n          let digit = parseInt(flattened[i], 10);\n  \n          // 짝수 자릿수면서 9를 넘어가면 각 자릿수를 더함\n          if ((i + 1) % 2 === 0) {\n            digit *= 2;\n            if (digit > 9) {\n              digit = digit - 9;\n            }\n          }\n          sum += digit;\n        }\n        \n        // 유효성 검사\n        return sum % 10 === 0;\n      }\n    },\n    methods: {\n      submitForm() {\n        if (!this.isValidCardNumber) {\n            alert(\"유효하지 않는 카드 번호 입니다.\")\n        }\n      }\n    }\n  };\n  </script>"],"mappings":"AAkBE,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;IAC7B,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,iBAAiBA,CAAA,EAAG;MAClB,MAAMC,SAAQ,GAAI,IAAI,CAACH,UAAU,CAACI,IAAI,CAAC,EAAE,CAAC,EAAE;MAC5C,IAAID,SAAS,CAACE,MAAK,KAAM,EAAC,IAAKC,KAAK,CAACH,SAAS,CAAC,EAAE;QAC/C,OAAO,KAAK;MACd;MAEA,IAAII,GAAE,GAAI,CAAC;MACX,KAAK,IAAIC,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAIL,SAAS,CAACE,MAAM,EAAEG,CAAC,EAAE,EAAE;QACzC,IAAIC,KAAI,GAAIC,QAAQ,CAACP,SAAS,CAACK,CAAC,CAAC,EAAE,EAAE,CAAC;;QAEtC;QACA,IAAI,CAACA,CAAA,GAAI,CAAC,IAAI,MAAM,CAAC,EAAE;UACrBC,KAAI,IAAK,CAAC;UACV,IAAIA,KAAI,GAAI,CAAC,EAAE;YACbA,KAAI,GAAIA,KAAI,GAAI,CAAC;UACnB;QACF;QACAF,GAAE,IAAKE,KAAK;MACd;;MAEA;MACA,OAAOF,GAAE,GAAI,EAAC,KAAM,CAAC;IACvB;EACF,CAAC;EACDI,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACX,IAAI,CAAC,IAAI,CAACV,iBAAiB,EAAE;QACzBW,KAAK,CAAC,oBAAoB;MAC9B;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}