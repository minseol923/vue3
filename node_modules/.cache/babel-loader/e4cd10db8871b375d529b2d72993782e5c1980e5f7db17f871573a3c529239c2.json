{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\"\n}, \"이메일 \", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"password\"\n}, \"비밀번호 \", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"p\", null, \"비밀번호는 영문 대문자, 소문자, 숫자, 특수문자를 포함한 8자리 이상의 문자열이어야 합니다.\", -1 /* HOISTED */);\nconst _hoisted_5 = [_hoisted_4];\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"confirmPassword\"\n}, \"비밀번호 확인 \", -1 /* HOISTED */);\nconst _hoisted_7 = {\n  key: 0\n};\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"p\", null, \"비밀번호와 비밀번호 확인이 일치하지 않습니다.\", -1 /* HOISTED */);\nconst _hoisted_9 = [_hoisted_8];\nconst _hoisted_10 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $setup.submitForm && $setup.submitForm(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_hoisted_1, _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.email = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.email]])]), _createElementVNode(\"div\", null, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.password = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.password]]), !$setup.isPasswordValid && $setup.password ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [..._hoisted_5])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", null, [_hoisted_6, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"confirmPassword\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.confirmPassword = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.confirmPassword]]), $setup.password !== $setup.confirmPassword && $setup.confirmPassword ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [..._hoisted_9])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n    disabled: !$setup.isFormValid,\n    type: \"submit\"\n  }, \"다음\", 8 /* PROPS */, _hoisted_10)])], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["_createElementVNode","for","_hoisted_4","_hoisted_8","_createElementBlock","onSubmit","_cache","_withModifiers","args","$setup","submitForm","_hoisted_1","type","id","email","$event","required","_hoisted_2","password","isPasswordValid","_hoisted_3","_hoisted_5","_hoisted_6","confirmPassword","_hoisted_7","_hoisted_9","disabled","isFormValid","_hoisted_10"],"sources":["/Users/kakao/Documents/balaan/src/components/firstStep.vue"],"sourcesContent":["<template>\n  <div>\n    <form @submit.prevent=\"submitForm\">\n      <div>\n        <label for=\"email\">이메일 </label>\n        <input type=\"email\" id=\"email\" v-model=\"email\" required>\n      </div>\n      <div>\n        <label for=\"password\">비밀번호 </label>\n        <input type=\"password\" id=\"password\" v-model=\"password\" required>\n        <div v-if=\"!isPasswordValid && password\">\n          <p>비밀번호는 영문 대문자, 소문자, 숫자, 특수문자를 포함한 8자리 이상의 문자열이어야 합니다.</p>\n        </div>\n      </div>\n      <div>\n        <label for=\"confirmPassword\">비밀번호 확인 </label>\n        <input type=\"password\" id=\"confirmPassword\" v-model=\"confirmPassword\" required>\n        <div v-if=\"password !== confirmPassword && confirmPassword\">\n          <p>비밀번호와 비밀번호 확인이 일치하지 않습니다.</p>\n        </div>\n      </div>\n      <div>\n        <button :disabled=\"!isFormValid\" type=\"submit\">다음</button>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted } from 'vue';\n\nexport default {\n  setup() {\n    const email = ref('');\n    const password = ref('');\n    const confirmPassword = ref('');\n\n    onMounted(() => {\n      // 페이지가 로드될 때 로컬 스토리지에서 email과 password 셋팅\n      email.value = localStorage.getItem('savedEmail') || '';\n      password.value = localStorage.getItem('savedPassword') || '';\n      confirmPassword.value = localStorage.getItem('savedConfirmPassword') || '';\n    });\n\n    const isPasswordValid = computed(() => {\n      const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+])[A-Za-z\\d!@#$%^&*()_+]{8,}$/;\n      return passwordRegex.test(password.value);\n    });\n\n    const isFormValid = computed(() => {\n      return (\n        email.value &&\n        password.value &&\n        confirmPassword.value &&\n        password.value === confirmPassword.value &&\n        isPasswordValid.value\n      );\n    });\n\n    const submitForm = () => {\n      if (isFormValid.value) {\n        console.log('폼이 제출되었습니다!');\n        // 로컬 스토리지에 email과 password 저장\n        localStorage.setItem('savedEmail', email.value);\n        localStorage.setItem('savedPassword', password.value);\n        localStorage.setItem('savedConfirmPassword', confirmPassword.value);\n        // this.$router.push('/secondStep');\n      } else if (password.value !== confirmPassword.value) {\n        alert('비밀번호와 비밀번호 확인이 일치하지 않습니다.');\n      }\n    };\n\n    return {\n      email,\n      password,\n      confirmPassword,\n      isPasswordValid,\n      isFormValid,\n      submitForm,\n    };\n  },\n};\n</script>\n"],"mappings":";gCAIQA,mBAAA,CAA+B;EAAxBC,GAAG,EAAC;AAAO,GAAC,MAAI;gCAIvBD,mBAAA,CAAmC;EAA5BC,GAAG,EAAC;AAAU,GAAC,OAAK;;;;gCAGzBD,mBAAA,CAA2D,WAAxD,sDAAoD;oBAAvDE,UAA2D,C;gCAI7DF,mBAAA,CAA6C;EAAtCC,GAAG,EAAC;AAAiB,GAAC,UAAQ;;;;gCAGnCD,mBAAA,CAAgC,WAA7B,2BAAyB;oBAA5BG,UAAgC,C;;;uBAjBxCC,mBAAA,CAwBM,cAvBJJ,mBAAA,CAsBO;IAtBAK,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,MAAA,CAAAC,UAAA,IAAAD,MAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;MAC/BR,mBAAA,CAGM,cAFJW,UAA+B,E,gBAC/BX,mBAAA,CAAwD;IAAjDY,IAAI,EAAC,OAAO;IAACC,EAAE,EAAC,OAAO;+DAAUJ,MAAA,CAAAK,KAAK,GAAAC,MAAA;IAAEC,QAAQ,EAAR;iDAAPP,MAAA,CAAAK,KAAK,E,KAE/Cd,mBAAA,CAMM,cALJiB,UAAmC,E,gBACnCjB,mBAAA,CAAiE;IAA1DY,IAAI,EAAC,UAAU;IAACC,EAAE,EAAC,UAAU;+DAAUJ,MAAA,CAAAS,QAAQ,GAAAH,MAAA;IAAEC,QAAQ,EAAR;iDAAVP,MAAA,CAAAS,QAAQ,E,IAC1CT,MAAA,CAAAU,eAAe,IAAIV,MAAA,CAAAS,QAAQ,I,cAAvCd,mBAAA,CAEM,OAAAgB,UAAA,MAAAC,UAAA,M,qCAERrB,mBAAA,CAMM,cALJsB,UAA6C,E,gBAC7CtB,mBAAA,CAA+E;IAAxEY,IAAI,EAAC,UAAU;IAACC,EAAE,EAAC,iBAAiB;+DAAUJ,MAAA,CAAAc,eAAe,GAAAR,MAAA;IAAEC,QAAQ,EAAR;iDAAjBP,MAAA,CAAAc,eAAe,E,GACzDd,MAAA,CAAAS,QAAQ,KAAKT,MAAA,CAAAc,eAAe,IAAId,MAAA,CAAAc,eAAe,I,cAA1DnB,mBAAA,CAEM,OAAAoB,UAAA,MAAAC,UAAA,M,qCAERzB,mBAAA,CAEM,cADJA,mBAAA,CAA0D;IAAjD0B,QAAQ,GAAGjB,MAAA,CAAAkB,WAAW;IAAEf,IAAI,EAAC;KAAS,IAAE,iBAAAgB,WAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}